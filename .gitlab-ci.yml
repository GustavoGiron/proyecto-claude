stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  only:
    - develop
  before_script:
    - echo "Iniciando build..."
    - docker info
  script:
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
    - docker build --no-cache -t ayd2g5/prueba:backend ./backend
    - docker build --no-cache -t ayd2g5/prueba:frontend ./frontend
    - docker push ayd2g5/prueba:backend
    - docker push ayd2g5/prueba:frontend
  after_script:
    - docker logout

deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  only:
    - develop
  before_script:
    # Instalar kubectl si no está disponible
    - apk add --no-cache curl
    - gcloud components install kubectl
  script:
    # Autenticación en GCP
    - echo $GCLOUD_SERVICE_KEY | base64 -d > ${CI_PROJECT_DIR}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=${CI_PROJECT_DIR}/gcloud-service-key.json
    - gcloud config set project $PROJECT_ID

    # Verificar variables requeridas
    - |
      if [ -z "$PROJECT_ID" ] || [ -z "$CLUSTER_NAME" ] || [ -z "$CLUSTER_ZONE" ]; then
        echo "Error: Variables de entorno requeridas no están definidas"
        exit 1
      fi

    # Conectar al cluster
    - gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE

    # Verificar conexión
    - kubectl cluster-info

    # Aplicar deployments
    - kubectl apply -f backend-deployment.yaml
    - kubectl apply -f frontend-deployment.yaml

    # Forzar el redeploy para que tomen la nueva imagen aunque el tag sea igual
    - kubectl rollout restart deployment/backend-deployment
    - kubectl rollout restart deployment/frontend  # ⚠️ CAMBIO AQUÍ - Quitamos "-deployment"

    # Verificar el estado del deployment
    - kubectl rollout status deployment/backend-deployment
    - kubectl rollout status deployment/frontend  # ⚠️ CAMBIO AQUÍ - Quitamos "-deployment"

    # Mostrar pods en ejecución
    - kubectl get pods -o wide
  after_script:
    # Limpiar archivo de credenciales
    - rm -f ${CI_PROJECT_DIR}/gcloud-service-key.json